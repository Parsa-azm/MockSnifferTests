visibility,parent-FQN,method-name,param-list,return-type,param-signature,nested-invocations,noparam-constructor,tags
public,org.carlspring.commons.io.RecursiveMover,postVisitDirectory,"[java.nio.file.Path, java.io.IOException]",java.nio.file.FileVisitResult,Ljava/nio/file/Path;Ljava/io/IOException;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,hasReachedLimit,[],boolean,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,reposition,[],void,,{},false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.ByteRangeInputStream,reposition,[],void,,{},false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,reposition,[],void,,{},false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.RandomInputStream,setCount,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.RandomInputStream,getCount,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.encryption.EncryptionAlgorithmsEnum,setAlgorithm,[java.lang.String],void,Ljava/lang/String;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,getPath,[],java.nio.file.Path,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,isGenerateChecksumFiles,[],boolean,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,getMessageDigest,[java.lang.String],java.security.MessageDigest,Ljava/lang/String;,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=getMessageDigest(java.lang.String)]#body#statement[index=0]#expression=java.util.Map.get(java.lang.Object)},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,getMessageDigest,[java.lang.String],java.security.MessageDigest,Ljava/lang/String;,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=getMessageDigest(java.lang.String)]#body#statement[index=0]#expression=java.util.Map.get(java.lang.Object)},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,read,[],int,,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=read()]#body#statement[index=2]#then#statement[index=0]#expression=java.util.Map.entrySet()},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=true, static=false, ifs=true, switches=false, returns=true, parameters=false, loops=true}"
public,org.carlspring.commons.io.MultipleDigestInputStream,read,"[byte[], int, int]",int,[BII,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=read(byte[],int,int)]#body#statement[index=2]#then#statement[index=0]#expression=java.util.Map.entrySet()}",false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=true, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=true}"
public,org.carlspring.commons.io.MultipleDigestInputStream,read,[byte[]],int,[B,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=read(byte[])]#body#statement[index=2]#expression=java.util.Map.entrySet()},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=true, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=true}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,write,[int],void,I,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=write(int)]#body#statement[index=1]#expression=java.util.Map.entrySet()},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=true}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,write,[byte[]],void,[B,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=write(byte[])]#body#statement[index=1]#expression=java.util.Map.entrySet()},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=true}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,write,"[byte[], int, int]",void,[BII,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=write(byte[],int,int)]#body#statement[index=1]#expression=java.util.Map.entrySet()}",false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=true}"
public,org.carlspring.commons.io.RandomInputStream,read,[],int,,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=RandomInputStream]#method[signature=read()]#body#statement[index=2]#expression=java.util.Random.nextInt()},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=true, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setReloadableInputStreamHandler,[org.carlspring.commons.io.reloading.ReloadableInputStreamHandler],void,Lorg/carlspring/commons/io/reloading/ReloadableInputStreamHandler;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,diff,[],boolean,,{},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=true, static=false, ifs=true, switches=false, returns=true, parameters=false, loops=true}"
public,org.carlspring.commons.io.MultipleDigestInputStream,getMessageDigestAsHexadecimalString,[java.lang.String],java.lang.String,Ljava/lang/String;,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#condition=java.util.Map.containsKey(java.lang.Object), #subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#then#statement[index=0]#expression=java.util.Map.get(java.lang.Object), #subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#else#statement[index=1]=java.util.Map.put(java.lang.Object,java.lang.Object)}",false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,getMessageDigestAsHexadecimalString,[java.lang.String],java.lang.String,Ljava/lang/String;,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#condition=java.util.Map.containsKey(java.lang.Object), #subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#then#statement[index=0]#expression=java.util.Map.get(java.lang.Object), #subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=getMessageDigestAsHexadecimalString(java.lang.String)]#body#statement[index=0]#else#statement[index=1]=java.util.Map.put(java.lang.Object,java.lang.Object)}",false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,getCurrentByteRange,[],org.carlspring.commons.http.range.ByteRange,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setCurrentByteRange,[org.carlspring.commons.http.range.ByteRange],void,Lorg/carlspring/commons/http/range/ByteRange;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,getBytes1,[],byte[],,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.reloading.FSReloadableInputStreamHandler,getInputStream,[],java.io.InputStream,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,getBytes2,[],byte[],,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setByteRanges,[java.util.List],void,Ljava/util/List;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.ByteRangeInputStream,setLength,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.RandomInputStream,setLength,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setLimit,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,isRangedMode,[],boolean,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,hasMoreByteRanges,[],boolean,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,getDigests,[],java.util.Map,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,getDigests,[],java.util.Map,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,setNumberOfBytesToShowUponDifference,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.encryption.EncryptionAlgorithmsEnum,setExtension,[java.lang.String],void,Ljava/lang/String;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,getReloadableInputStreamHandler,[],org.carlspring.commons.io.reloading.ReloadableInputStreamHandler,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,getLimit,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,getNumberOfBytesToShowUponDifference,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,setBytes2,[byte[]],void,[B,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.diff.BinaryDiff,setBytes1,[byte[]],void,[B,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.reloading.FSReloadableInputStreamHandler,reload,[],void,,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,reload,[],void,,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.ByteRangeInputStream,reload,[],void,,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,reload,[],void,,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,getHexDigests,[],java.util.Map,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,getBytesRead,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,writeChecksums,[],void,,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=writeChecksums()]#body#statement[index=0]#expression=java.util.Map.entrySet()},false,"{multiple_statements=false, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=false, loops=true}"
public,org.carlspring.commons.io.MultipleDigestInputStream,setDigests,[java.util.Map],void,Ljava/util/Map;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,setDigests,[java.util.Map],void,Ljava/util/Map;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,close,[],void,,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=true, switches=false, returns=false, parameters=false, loops=false}"
public,org.carlspring.commons.encryption.EncryptionAlgorithmsEnum,getExtension,[],java.lang.String,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.RecursiveMover,move,"[java.nio.file.Path, java.nio.file.Path, boolean]",void,Ljava/nio/file/Path;Ljava/nio/file/Path;Z,{},false,"{multiple_statements=true, conditionals=true, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.encryption.EncryptionAlgorithmsEnum,getAlgorithm,[],java.lang.String,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setRangedMode,[boolean],void,Z,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,setGenerateChecksumFiles,[boolean],void,Z,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,setPath,[java.nio.file.Path],void,Ljava/nio/file/Path;,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,setBytesRead,[long],void,J,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.RecursiveMover,preVisitDirectory,"[java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes]",java.nio.file.FileVisitResult,Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;,{},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=true}"
public,org.carlspring.commons.io.RecursiveMover,visitFile,"[java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes]",java.nio.file.FileVisitResult,Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;,{},false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.RecursiveMover,visitFileFailed,"[java.nio.file.Path, java.io.IOException]",java.nio.file.FileVisitResult,Ljava/nio/file/Path;Ljava/io/IOException;,{},false,"{multiple_statements=true, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=true, switches=false, returns=true, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestInputStream,addAlgorithm,[java.lang.String],void,Ljava/lang/String;,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestInputStream]#method[signature=addAlgorithm(java.lang.String)]#body#statement[index=1]=java.util.Map.put(java.lang.Object,java.lang.Object)}",false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.MultipleDigestOutputStream,addAlgorithm,[java.lang.String],void,Ljava/lang/String;,"{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=MultipleDigestOutputStream]#method[signature=addAlgorithm(java.lang.String)]#body#statement[index=1]=java.util.Map.put(java.lang.Object,java.lang.Object)}",false,"{multiple_statements=true, conditionals=false, local_variables=true, returns_primitives=false, static=false, ifs=false, switches=false, returns=false, parameters=true, loops=false}"
public,org.carlspring.commons.io.ByteRangeInputStream,getLength,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.RandomInputStream,getLength,[],long,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.AbstractByteRangeInputStream,getByteRanges,[],java.util.List,,{},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=false, static=false, ifs=false, switches=false, returns=true, parameters=false, loops=false}"
public,org.carlspring.commons.io.RandomInputStream,getRandomSize,[long],long,J,{#subPackage[name=org]#subPackage[name=carlspring]#subPackage[name=commons]#subPackage[name=io]#containedType[name=RandomInputStream]#method[signature=getRandomSize(long)]#body#statement[index=0]#expression#leftOperand=java.util.Random.nextDouble()},false,"{multiple_statements=false, conditionals=false, local_variables=false, returns_primitives=true, static=false, ifs=false, switches=false, returns=true, parameters=true, loops=false}"
